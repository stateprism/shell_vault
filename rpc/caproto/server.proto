syntax = "proto3";
import "common/common.proto";

option go_package = "github.com/xadaemon/shell_vault/rpc/caproto";

service CertificateAuthority {
  rpc GetConfig(ConfigRequest) returns (ConfigReply) {}
  rpc Authenticate(Empty) returns (AuthReply) {}
  rpc RequestUserCertificate(UserCertRequest) returns (CertReply) {}
  rpc RequestServerCertificate(HostCertRequest) returns (CertReply) {}
  rpc GetCurrentKey(Empty) returns (CertReply) {}
}

message Errors {map<string, string> errors = 1;}

message ConfigRequest {
  Version client_version = 1;
  // The version of the client understood protocol
  Version client_protocol_version = 2;
}

message ConfigReply {
  // The version of the server understood protocol
  Version server_protocol_version = 1;

  // The time at which the server replied
  uint64 reply_time = 2;
  string server_id = 3;
  // The server's certification policy
  // and the allowed extensions
  Extensions policy = 4;
}


message UserCertRequest {
  fixed64 requested_validity = 2;
  bytes public_key = 3;
  optional string extendedValidityJustification = 4;
}

message HostCertRequest {
  bytes public_key = 1;
  repeated string hostnames = 2;
}

message CertReply {
  string cert = 1;
  int64 validUntil = 2;
}
